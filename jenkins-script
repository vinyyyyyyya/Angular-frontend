pipeline {
    agent {
        docker {
            image 'node:14' // Use the Node.js image with the desired version
            args '-u root' // Optionally, run the Docker container as root
        }
    }
    stages {
        
        stage('Install Dependencies') {
            steps {
                sh 'npm install'
            }
        }
        stage('SonarQube Analysis') {
             environment {
              SONAR_URL = "http://3.109.217.246:9000"
              }
           steps {
               withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
               sh 'npm install -g sonarqube-scanner && sonar-scanner -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
            }
          }
         }
        stage('Build and Push Docker Image') {
           environment {
             DOCKER_IMAGE = "vinayak345/angular:${BUILD_NUMBER}"
             REGISTRY_CREDENTIALS = credentials('docker-cred')
      }
      steps {
        script {
            sh 'cd Dockerfile && docker build -t ${DOCKER_IMAGE}'
            def dockerImage = docker.image("${DOCKER_IMAGE}")
            docker.withRegistry('https://index.docker.io/v1/', "docker-cred") {
                dockerImage.push()
            }
        }
      }
        }
        stage('Update Deployment File') {
                   environment {
            GIT_REPO_NAME = "Angular-frontend"
            GIT_USER_NAME = "vinyyyyyyya"
        }
        steps {
            withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
                sh '''
                    git config user.email "vteradali5@gmail.com"
                    git config user.name "vinyyyyyyya"
                    BUILD_NUMBER=${BUILD_NUMBER}
                    git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                    git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
                '''
            }
        }

        }
    }
    
}

